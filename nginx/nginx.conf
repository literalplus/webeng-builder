worker_processes auto;
pid /tmp/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	charset utf-8;
	# don't send nginx version everywhere
	server_tokens off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
	# to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
	add_header Strict-Transport-Security "max-age=31536000;";

	# https://scotthelme.co.uk/a-new-security-header-referrer-policy/
	add_header Referrer-Policy "strict-origin-when-cross-origin";

	##
	# Logging Settings
	##

	access_log off;
	error_log stderr;

	# security from https://gist.github.com/plentz/6737338

	# config to don't allow the browser to render the page inside an frame or iframe
	# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
	# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
	# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
	add_header X-Frame-Options SAMEORIGIN;

	# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
	# to disable content-type sniffing on some browsers.
	# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	# currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
	# http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
	# 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
	add_header X-Content-Type-Options nosniff;

	# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
	# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
	# this particular website if it was disabled by the user.
	# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	add_header X-XSS-Protection "1; mode=block";

	server {
		listen 8080 default_server;
		server_name _;
		root /usr/src/app/www;
		index search.html;

		location = /robots.txt {
		allow all;
		access_log off;
		return 200 "Disallow: *";
		}

		location = /healthz {
		allow all;
		access_log off;
		return 200 "healthy";
		}

		location / {
			try_files $uri $uri/ =404;
		}

		location ~ /\. {
			deny all;
		}
	}
}
